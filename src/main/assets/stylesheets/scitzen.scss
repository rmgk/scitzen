@import 'lib/normalize.css/normalize';

:root {

  --theme-color-values: 0, 50%, 50%;
  --theme-color: hsl(var(--theme-color-values));
  --theme-color-light: hsl(var(--theme-color-values), 0.3);
  --color-subdued: hsl(0, 0%, 66%);
  // a4 paper has 21cm, subtract 1.5 inch for print margins
  --main-content-width: 171.9mm;
  --monospace: "Liberation Mono", monospace;
}

@mixin boxed-content {
  box-shadow: 0 0 2px rgba(0, 0, 0, .12), 0 0 4px rgba(0, 0, 0, .24);
  background: #fffc;
  border-radius: 5px;
}

@mixin hover-down {
  &:hover {
    transition: 0.2s ease-out;
    transform: translateX(4px);
    filter: brightness(75%);
  }
}

@mixin text-font {
  font-family: "Liberation Sans", sans-serif;
  @media (min-resolution: 192dpi) {
    font-family: "Liberation Serif", serif;
  }
}

@mixin float-box {
  border: 1px solid var(--color-subdued);
  padding: calc(1em - 1px);
  & > :first-child {
    margin-top: 0;
  }
  & > :last-child {
    margin-bottom: 0;
  }
}

@mixin quoted {
  &:before{
    // ⸢ ⸣ ⸤ ⸥
    content: "⸢";
  }
  &:after {
    content: "⸥";
  }
}



html {
  line-height: 1.5;

  @media screen {
    background: snow;
  }

  @include text-font;
  color: #222;
}


::selection {
  background: var(--theme-color-light);
  opacity: 20%;
}

a {
  text-decoration: none;
  color: var(--theme-color);
  @include hover-down;
}

h1, h2, h3, h4, h5, h6 {
  font-family: "Liberation Serif", serif;
  text-align: center;
}
h1, h2 {
  font-weight: normal;
}


.time, .category {
  @media screen {
    color: var(--color-subdued);
  }
}

.time {
  white-space: nowrap;
  font-family: var(--monospace);
  letter-spacing: -0.0625em;
}




.fullpost a {
  word-break: break-all;
  @include quoted;
}


body {

  // makes jumping to links animate instead of instant
  //scroll-behavior: smooth;

  & > main {
    padding: 1em;
    margin-bottom: calc(100vh - 3.5em);

    display: grid;
    grid-template-columns: [image-start] minmax(0, 1fr)
                           [content-start] minmax(10em, var(--main-content-width))
                           [content-end] minmax(0, 1fr)
                           [image-end] 1fr;
    justify-content: space-between;



    & > * {
      grid-column: content-start / content-end;
      // keep all content inside the page
      max-width: 100%;
      overflow-x: scroll;
    }

    & > {
      figure, img {
        grid-column: image-start / image-end;
        justify-self: center;
        margin-left: 0;
        margin-right: 0;

        @include boxed-content;
      }
    }


  }

  .metadata {
    display: flex;
    justify-content: center;
    > * {
      margin-right: 0.5em;
    }
  }

  p {
    text-align: justify;
    hyphens: auto;
    // restrict max width also when nested inside something else
    max-width: var(--main-content-width);
  }

  ul {
    box-sizing: border-box;
  }

  pre {
    white-space: pre-line;
    text-align: justify;
    hyphens: auto;
    overflow-x: auto;
    @include text-font;
  }

  pre > code {
    white-space: pre;
    display: block;
  }

  hr {
    border: 0.2em dashed var(--color-subdued);
    max-width: 7em;
    border-radius:  0.2em;
    margin-bottom: 2em;
    margin-top: 2em;
  }

  img {
    // why is this not the default?
    image-orientation: from-image;

    height: auto;
    max-height: 40em;
    // without block display, the outer div becomes a bit larger (line height?)
    display: block;
    margin: auto;
    max-width: 100%;
  }

  figure, blockquote {
    @include float-box;
  }

  p > code {
    font-family: var(--monospace);
    color: black;
    @include quoted;
  }

  cite::before {
    content: "– ";
  }

  ins {
    text-decoration: none;
    color:darkgreen;
  }
  del {
    color: darkred;
  }

  dd > :first-child {
    margin-top: 0;
  }
  dd > :last-child {
    margin-top: 0;
  }

  .articleref article {
    margin: .25em 0;

    display: flex;

    @media screen and (max-width: var(--main-content-width)) {
      flex-direction: column;
    }

    @media screen and (min-width: var(--main-content-width)) {
      & > .category {
        text-align: right;
      }
    }

    // space between the items of the article
    & > * {
      margin-right: 0.5em;
    }

    // make the title get most of the space,
    // to cause the tags to be right aligned
    & > .title {
      flex: 1;
    }
  }

}


// sidebar specific style
body {
  display: flex;
  align-items: stretch;

  & > main {
    flex: 1 1 var(--main-content-width);
  }

  .sidebar {
    flex: 0 100 max-content;
    & > input {
      display: none;
    }
    & > label {
      position: fixed;
      top: 0;
      cursor: pointer;
      width: 1.5em;
      height: 1.5em;
      display: block;
      padding: 0.5em;
      z-index: 1;

      svg {
        width: 100%;
        height: 100%;
      }
    }





    nav {
      // sticky at top 0 (original position of the element) essentially causes the
      // element to be fixed in place BUT it keeps occupying space in the layout
      position: sticky;
      top: 0;

      // show scrollbar
      overflow-y: scroll;

      // box sizing together with height makes it occupy the full height pixel perfect
      box-sizing: border-box;
      height: 100vh;

      // top margin to not collide with the label as much
      padding: 2.5em 0.5em;

      border-right: 1px solid var(--theme-color);
      background-color: white;

    }

  }

  // remove sidebar nav content
  #sidebar-switch:checked ~ nav {
    display: none;
  }
}

.sidebar ol {
  list-style: disc;
  margin: 0;
  margin-left: 1em;
  padding: 0;
}




.katex-html {
  display: none;
}

#highlight:target {
  background: yellow;
  background-clip: padding-box;
}

#highlight {
  border-top: 30vh transparent solid;
  margin-top: -30vh;
  background-clip: padding-box;
}
